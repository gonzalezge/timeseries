Data$Empresa = as.character(Data$Empresa)
Data = as.data.frame(pivot_wider( Data, names_from = Fecha, values_from = Close) )
Data
###### -------
Data = cbind(AAL[,4],AAPL[,4],AMZN[,4],BAC[,4],COST[,4],CVS[,4],DIS[,4],DUK[,4],FB[,4],GE[,4],GOOG[,4],IT[,4],KO[,4],KR[,4],MS[,4],SBUX[,4],TGT[,4],WFC[,4])
Fechas_guardar = rownames(Data)
Data = scale(Data, center = TRUE, scale = TRUE)
Data = as.data.frame(Data)
Data
Data = reshape2::melt(Data,'Fecha')
Data
Data$Fecha = Fechas_guardar
Data = reshape2::melt(Data,'Fecha')
Data$Fecha = Fechas_guardar
Data = as.data.frame(Data)
Data$Fecha = Fechas_guardar
Data = reshape2::melt(Data,'Fecha')
Data$Fecha
Data$Fecha
Data = as.data.frame(Data)
Fechas_guardar
###### -------
Data = cbind(AAL[,4],AAPL[,4],AMZN[,4],BAC[,4],COST[,4],CVS[,4],DIS[,4],DUK[,4],FB[,4],GE[,4],GOOG[,4],IT[,4],KO[,4],KR[,4],MS[,4],SBUX[,4],TGT[,4],WFC[,4])
Fechas_guardar = Data$Fecha
Fechas_guardar
###### -------
Data = cbind(AAL[,4],AAPL[,4],AMZN[,4],BAC[,4],COST[,4],CVS[,4],DIS[,4],DUK[,4],FB[,4],GE[,4],GOOG[,4],IT[,4],KO[,4],KR[,4],MS[,4],SBUX[,4],TGT[,4],WFC[,4])
Fechas_guardar = rownames(Data)
Fechas_guardar
Data
Fechas_guardar = names(Data)
Fechas_guardar
rownames(Data)
index(Data)
Fechas_guardar =index(Data)
Data = as.data.frame(Data)
Data$Fecha = Fechas_guardar
Data = reshape2::melt(Data,'Fecha')
colnames(Data) = c('Fecha','Empresa','Close')
Data$Fecha = as.Date(Data$Fecha)
Data$Close = as.numeric(Data$Close)
Data$Empresa = as.character(Data$Empresa)
Data = as.data.frame(pivot_wider( Data, names_from = Fecha, values_from = Close) )
Data
###### -------
Data = cbind(AAL[,4],AAPL[,4],AMZN[,4],BAC[,4],COST[,4],CVS[,4],DIS[,4],DUK[,4],FB[,4],GE[,4],GOOG[,4],IT[,4],KO[,4],KR[,4],MS[,4],SBUX[,4],TGT[,4],WFC[,4])
Fechas_guardar = Data$Fecha
Fechas_guardar =index(Data)
Data = scale(Data, center = TRUE, scale = TRUE)
Data = as.data.frame(Data)
Fechas_guardar
Data
Data$Fecha = Fechas_guardar
Data
Data = reshape2::melt(Data,'Fecha')
Data
colnames(Data) = c('Fecha','Empresa','Close')
Data
Data$Fecha = as.Date(Data$Fecha)
Data$Close = as.numeric(Data$Close)
Data$Empresa = as.character(Data$Empresa)
Data
Data = as.data.frame(pivot_wider( Data, names_from = Fecha, values_from = Close) )
wss <- map_dbl(1:15, ~{kmeans(select(Data, -Empresa), ., nstart=50,iter.max = 15 )$tot.withinss})
n_clust <- 1:15
elbow_df <- as.data.frame(cbind("n_clust" = n_clust, "wss" = wss))
ggplot(elbow_df) +
geom_line(aes(y = wss, x = n_clust), colour = "#82518c")
clusters <- kmeans(select(Data, -Empresa), centers = 3,nstart=50,iter.max = 100)
clusters
Data <- Data %>%
mutate(cluster = clusters$cluster)
(centers <- rownames_to_column(as.data.frame(clusters$centers), "cluster"))
pwt_long <- reshape2::melt(Data,c('Empresa', 'cluster'))
colnames(pwt_long) = c('country','cluster','year','avh')
centers_long = reshape2::melt(centers,c('cluster'))
colnames(centers_long) = c( 'cluster','year','avh')
Grupos = as.data.frame(cbind(Accion = Data$Empresa,Cluster= Data$cluster))
##### ------ Grupos ----- #####
Grupos[Grupos$Cluster==2,]
Grupos
###### --------- Grafico ------- #########
Grafico =  ggplot() +
geom_line(data = pwt_long, aes(y = avh, x = year, group = country), colour = "#82518c") +
facet_wrap(~cluster, nrow = 1) +
geom_line(data = centers_long, aes(y = avh, x = year, group = cluster), col = "#b58900", size = 2)
plot(Grafico)
###### -------
Data = cbind(AAL[,4],AAPL[,4],AMZN[,4],BAC[,4],COST[,4],CVS[,4],DIS[,4],DUK[,4],FB[,4],GE[,4],GOOG[,4],IT[,4],KO[,4],KR[,4],MS[,4],SBUX[,4],TGT[,4],WFC[,4])
Fechas_guardar =index(Data)
Data = as.data.frame(Data)
Data = as.data.frame(apply(Data, 2, returns))
Data$Fecha = Fechas_guardar
Data= Data[-1,]
Data = reshape2::melt(Data,'Fecha')
colnames(Data) = c('Fecha','Empresa','Close')
Data$Fecha = as.Date(Data$Fecha)
Data$Close = as.numeric(Data$Close)
Data$Empresa = as.character(Data$Empresa)
Data = as.data.frame(pivot_wider( Data, names_from = Fecha, values_from = Close) )
wss <- map_dbl(1:15, ~{kmeans(select(Data, -Empresa), ., nstart=50,iter.max = 15 )$tot.withinss})
n_clust <- 1:15
elbow_df <- as.data.frame(cbind("n_clust" = n_clust, "wss" = wss))
ggplot(elbow_df) +
geom_line(aes(y = wss, x = n_clust), colour = "#82518c")
clusters <- kmeans(select(Data, -Empresa), centers = 3,nstart=50,iter.max = 100)
Data <- Data %>%
mutate(cluster = clusters$cluster)
(centers <- rownames_to_column(as.data.frame(clusters$centers), "cluster"))
pwt_long <- reshape2::melt(Data,c('Empresa', 'cluster'))
colnames(pwt_long) = c('country','cluster','year','avh')
centers_long = reshape2::melt(centers,c('cluster'))
colnames(centers_long) = c( 'cluster','year','avh')
Grupos = as.data.frame(cbind(Accion = Data$Empresa,Cluster= Data$cluster))
##### ------ Grupos ----- #####
Grupos[Grupos$Cluster==2,]
##### ------ Grupos ----- #####
Grupos[Grupos$Cluster==1,]
##### ------ Grupos ----- #####
Grupos[Grupos$Cluster==3,]
Data
###### -------
Data = cbind(AAL[,4],AAPL[,4],AMZN[,4],BAC[,4],COST[,4],CVS[,4],DIS[,4],DUK[,4],FB[,4],GE[,4],GOOG[,4],IT[,4],KO[,4],KR[,4],MS[,4],SBUX[,4],TGT[,4],WFC[,4])
Data
write_csv(Data,'/Volumes/GoogleDrive/My Drive/Uniandes Trading algoritmico/Clase 3/Codigo/Datos_variables.xlsx')
write_csv(Data,file='/Volumes/GoogleDrive/My Drive/Uniandes Trading algoritmico/Clase 3/Codigo/Datos_variables.xlsx')
Data
as.data.frame(Data)
write_csv(as.data.frame(Data),file='/Volumes/GoogleDrive/My Drive/Uniandes Trading algoritmico/Clase 3/Codigo/Datos_variables.xlsx')
Data = scale(Data, center = TRUE, scale = TRUE)
Data = scale(Data, center = TRUE, scale = TRUE)
Data = as.data.frame(Data)
Data$Fecha = Fechas_guardar
Data
###### -------
Data = cbind(AAL[,4],AAPL[,4],AMZN[,4],BAC[,4],COST[,4],CVS[,4],DIS[,4],DUK[,4],FB[,4],GE[,4],GOOG[,4],IT[,4],KO[,4],KR[,4],MS[,4],SBUX[,4],TGT[,4],WFC[,4])
Fechas_guardar =index(Data)
Data = as.data.frame(Data)
Fechas_guardar =index(Data)
Data = scale(Data, center = TRUE, scale = TRUE)
Data = as.data.frame(Data)
Data$Fecha = Fechas_guardar
Data = reshape2::melt(Data,'Fecha')
colnames(Data) = c('Fecha','Empresa','Close')
Data$Fecha = as.Date(Data$Fecha)
Data$Close = as.numeric(Data$Close)
Data$Empresa = as.character(Data$Empresa)
Data
###### -------
Data = cbind(AAL[,4],AAPL[,4],AMZN[,4],BAC[,4],COST[,4],CVS[,4],DIS[,4],DUK[,4],FB[,4],GE[,4],GOOG[,4],IT[,4],KO[,4],KR[,4],MS[,4],SBUX[,4],TGT[,4],WFC[,4])
Data = as.data.frame(Data)
Fechas_guardar =index(Data)
Data = scale(Data, center = TRUE, scale = TRUE)
Data = as.data.frame(Data)
Data$Fecha = Fechas_guardar
Data = scale(Data, center = TRUE, scale = TRUE)
Data = as.data.frame(Data)
###### -------
Data = cbind(AAL[,4],AAPL[,4],AMZN[,4],BAC[,4],COST[,4],CVS[,4],DIS[,4],DUK[,4],FB[,4],GE[,4],GOOG[,4],IT[,4],KO[,4],KR[,4],MS[,4],SBUX[,4],TGT[,4],WFC[,4])
Data = as.data.frame(Data)
Data = scale(Data, center = TRUE, scale = TRUE)
Data = as.data.frame(Data)
Data
lapply(colnames(Data), function(x){Data[,x]})
other = lapply(colnames(Data), function(x){Data[,x]})
pc <- tsclust(other, type = "partitional", k = 20L,
distance = "dtw_basic", centroid = "pam",
seed = 3247L, trace = TRUE,
args = tsclust_args(dist = list(window.size = 20L)))
pc <- tsclust(other, type = "partitional", k = 5,
distance = "dtw_basic", centroid = "pam",
seed = 3247L, trace = TRUE)
plot(pc)
pc <- tsclust(other, type = "partitional", k = 5,
distance = "Euclidean", centroid = "pam",
seed = 3247L, trace = TRUE)
#>
#>  Precomputing distance matrix...
#>
#> Iteration 1: Changes / Distsum = 100 / 1361.256
#> Iteration 2: Changes / Distsum = 8 / 1101.633
#> Iteration 3: Changes / Distsum = 2 / 1036.096
#> Iteration 4: Changes / Distsum = 0 / 1031.353
#>
#>  Elapsed time is 0.412 seconds.
plot(pc)
pc <- tsclust(other, type = "partitional", k = 5,
distance = "dtw_basic", centroid = "pam",
seed = 3247L, trace = TRUE)
pc_dtw <- tsclust(other, type = "partitional", k = 5,
distance = "dtw_basic", centroid = "pam",
seed = 3247L, trace = TRUE)
plot(pc_dtw)
pc_ecludean <- tsclust(other, type = "partitional", k = 5,
distance = "Euclidean", centroid = "pam",
seed = 3247L, trace = TRUE)
plot(pc_ecludean)
hc <- tsclust(other, type = "hierarchical", k = 5L,
distance = "sbd", trace = TRUE,
control = hierarchical_control(method = "average"))
plot(hc)
# Calculate autocorrelation up to 50th lag, considering a list of time series as input
acf_fun <- function(series, ...) {
lapply(series, function(x) { as.numeric(acf(x, lag.max = 50L, plot = FALSE)$acf) })
}
# Autocorrelation-based fuzzy c-means
fc <- tsclust(CharTraj[1L:25L], type = "fuzzy", k = 5L,
preproc = acf_fun, distance = "L2",
seed = 123L)
fc
plot(c)
plot(fc)
library(tidyverse)
library(lubridate)
library(pwt9)
library(brotools)
library(readxl)
library(timeSeries)
library(dtwclust)
###### ----- Mercado internacional ----- #####
Data = as.data.frame(read_csv('/Volumes/GoogleDrive/My Drive/Uniandes Trading algoritmico/Clase 3/Codigo/Datos_variables.xlsx'))
Data
###### -------
Data = cbind(AAL[,4],AAPL[,4],AMZN[,4],BAC[,4],COST[,4],CVS[,4],DIS[,4],DUK[,4],FB[,4],GE[,4],GOOG[,4],IT[,4],KO[,4],KR[,4],MS[,4],SBUX[,4],TGT[,4],WFC[,4])
Data = as.data.frame(Data)
Fechas_guardar =index(Data)
Data$Fecha = Fechas_guardar
write_csv(as.data.frame(Data),file='/Volumes/GoogleDrive/My Drive/Uniandes Trading algoritmico/Clase 3/Codigo/Datos_variables.xlsx')
write_csv(as.data.frame(Data),file='/Volumes/GoogleDrive/My Drive/Uniandes Trading algoritmico/Clase 3/Codigo/Datos_variables.csv')
###### -------
Data = cbind(AAL[,4],AAPL[,4],AMZN[,4],BAC[,4],COST[,4],CVS[,4],DIS[,4],DUK[,4],FB[,4],GE[,4],GOOG[,4],IT[,4],KO[,4],KR[,4],MS[,4],SBUX[,4],TGT[,4],WFC[,4])
Data
Data = as.data.frame(Data)
Data
Fechas_guardar =index(Data)
Fechas_guardar
rownames(Data)
Fechas_guardar =  rownames(Data)
Fechas_guardar
write_csv(as.data.frame(Data),file='/Volumes/GoogleDrive/My Drive/Uniandes Trading algoritmico/Clase 3/Codigo/Datos_variables.csv')
Data
Data$Fecha = Fechas_guardar
Data
write_csv(as.data.frame(Data),file='/Volumes/GoogleDrive/My Drive/Uniandes Trading algoritmico/Clase 3/Codigo/Datos_variables.csv')
library(tidyverse)
library(lubridate)
library(pwt9)
library(brotools)
library(readxl)
library(timeSeries)
library(dtwclust)
###### ----- Mercado internacional ----- #####
Data = as.data.frame(Data)
###### ----- Mercado internacional ----- #####
Data = as.data.frame(read_excel('/Volumes/GoogleDrive/My Drive/Uniandes Trading algoritmico/Clase 3/Codigo/Datos.xlsx'))
library(tidyverse)
library(lubridate)
library(pwt9)
library(brotools)
library(readxl)
library(timeSeries)
library(dtwclust)
###### ----- Mercado internacional ----- #####
Data = as.data.frame(read_excel('/Volumes/GoogleDrive/My Drive/Uniandes Trading algoritmico/Clase 3/Codigo/Datos.xlsx',sheet = 'Nacional'))
Data$Fecha = as.Date(Data$Fecha)
Fechas_guardar = Data$Fecha
Data=Data[,-1]
Fechas_guardar =  rownames(Data)
Data = scale(Data, center = TRUE, scale = TRUE)
Data = as.data.frame(Data)
Data$Fecha = Fechas_guardar
Data = reshape2::melt(Data,'Fecha')
colnames(Data) = c('Fecha','Empresa','Close')
###### ----- Mercado internacional ----- #####
Data = as.data.frame(read_excel('/Volumes/GoogleDrive/My Drive/Uniandes Trading algoritmico/Clase 3/Codigo/Datos.xlsx',sheet = 'Nacional'))
Data$Fecha = as.Date(Data$Fecha)
Fechas_guardar = Data$Fecha
Data=Data[,-1]
Fechas_guardar =  rownames(Data)
Data = scale(Data, center = TRUE, scale = TRUE)
###### ----- Mercado internacional ----- #####
Data = as.data.frame(read_excel('/Volumes/GoogleDrive/My Drive/Uniandes Trading algoritmico/Clase 3/Codigo/Datos.xlsx',sheet = 'Nacional'))
###### ----- Mercado internacional ----- #####
Data = as.data.frame(read_excel('/Volumes/GoogleDrive/My Drive/Uniandes Trading algoritmico/Clase 3/Codigo/Datos.xlsx',sheet = 'Nacional'))
Data$Fecha = as.Date(Data$Fecha)
###### ----- Mercado internacional ----- #####
Data = as.data.frame(read_excel('/Volumes/GoogleDrive/My Drive/Uniandes Trading algoritmico/Clase 3/Codigo/Datos.xlsx',sheet = 'Nacional'))
Data$Fecha = as.Date(Data$Fecha)
Fechas_guardar = Data$Fecha
Data=Data[,-1]
Fechas_guardar =  rownames(Data)
Data = scale(Data, center = TRUE, scale = TRUE)
Data = as.data.frame(Data)
Data$Fecha = Fechas_guardar
Data = reshape2::melt(Data,'Fecha')
colnames(Data) = c('Fecha','Empresa','Close')
Data$Fecha = as.Date(Data$Fecha)
Data$Close = as.numeric(Data$Close)
###### ----- Mercado internacional ----- #####
Data = as.data.frame(read_excel('/Volumes/GoogleDrive/My Drive/Uniandes Trading algoritmico/Clase 3/Codigo/Datos.xlsx',sheet = 'Nacional'))
Data$Fecha = as.Date(Data$Fecha)
###### ----- Mercado internacional ----- #####
Data = as.data.frame(read_excel('/Volumes/GoogleDrive/My Drive/Uniandes Trading algoritmico/Clase 3/Codigo/Datos.xlsx',sheet = 'Nacional'))
Data$Fecha = as.Date(Data$Fecha)
Fechas_guardar = Data$Fecha
Data=Data[,-1]
##### ------- Other form data ---- #####
other = lapply(colnames(Data), function(x){Data[,x]})
###### ----- Mercado internacional ----- #####
Data = as.data.frame(read_excel('/Volumes/GoogleDrive/My Drive/Uniandes Trading algoritmico/Clase 3/Codigo/Datos.xlsx',sheet = 'Nacional'))
Data$Fecha = as.Date(Data$Fecha)
Fechas_guardar = Data$Fecha
Data=Data[,-1]
##### ------- Other form data ---- #####
other = lapply(colnames(Data), function(x){Data[,x]})
Fechas_guardar =  rownames(Data)
Data = scale(Data, center = TRUE, scale = TRUE)
Data = as.data.frame(Data)
Data$Fecha = Fechas_guardar
Data = reshape2::melt(Data,'Fecha')
colnames(Data) = c('Fecha','Empresa','Close')
Data$Fecha = as.Date(Data$Fecha)
Data$Fecha
Fechas_guardar = Data$Fecha
###### ----- Mercado internacional ----- #####
Data = as.data.frame(read_excel('/Volumes/GoogleDrive/My Drive/Uniandes Trading algoritmico/Clase 3/Codigo/Datos.xlsx',sheet = 'Nacional'))
Data$Fecha = as.Date(Data$Fecha)
Fechas_guardar = Data$Fecha
Data=Data[,-1]
##### ------- Other form data ---- #####
other = lapply(colnames(Data), function(x){Data[,x]})
Data = scale(Data, center = TRUE, scale = TRUE)
Data = as.data.frame(Data)
Data$Fecha = Fechas_guardar
Data = reshape2::melt(Data,'Fecha')
colnames(Data) = c('Fecha','Empresa','Close')
Data$Fecha = as.Date(Data$Fecha)
Data$Close = as.numeric(Data$Close)
Data$Empresa = as.character(Data$Empresa)
Data = as.data.frame(pivot_wider( Data, names_from = Fecha, values_from = Close) )
wss <- map_dbl(1:15, ~{kmeans(select(Data, -Empresa), ., nstart=50,iter.max = 15 )$tot.withinss})
n_clust <- 1:15
elbow_df <- as.data.frame(cbind("n_clust" = n_clust, "wss" = wss))
ggplot(elbow_df) +
geom_line(aes(y = wss, x = n_clust), colour = "#82518c")
clusters <- kmeans(select(Data, -Empresa), centers = 3,nstart=50,iter.max = 100)
Data <- Data %>%
mutate(cluster = clusters$cluster)
(centers <- rownames_to_column(as.data.frame(clusters$centers), "cluster"))
pwt_long <- reshape2::melt(Data,c('Empresa', 'cluster'))
colnames(pwt_long) = c('country','cluster','year','avh')
centers_long = reshape2::melt(centers,c('cluster'))
colnames(centers_long) = c( 'cluster','year','avh')
Grupos = as.data.frame(cbind(Accion = Data$Empresa,Cluster= Data$cluster))
##### ------ Grupos ----- #####
Grupos[Grupos$Cluster==2,]
###### --------- Grafico ------- #########
Grafico =  ggplot() +
geom_line(data = pwt_long, aes(y = avh, x = year, group = country), colour = "#82518c") +
facet_wrap(~cluster, nrow = 1) +
geom_line(data = centers_long, aes(y = avh, x = year, group = cluster), col = "#b58900", size = 2)
plot(Grafico)
########### ----------- Other ------- ########
pc_dtw <- tsclust(other, type = "partitional", k = 5,
distance = "dtw_basic", centroid = "pam",
seed = 3247L, trace = TRUE)
plot(pc_dtw)
sapply(pc_dtw, cvi, type = c("DB", "DBstar"))
pc_dtw
sapply(SURFSKINTEMP_CLUST, function(cl) { sum(cl@cldist ^ 2) })
sapply(pc_dtw, function(cl) { sum(cl@cldist ^ 2) })
########### ----------- Other ------- ########
pc_dtw <- tsclust(other, type = "partitional", k = 5L:10L,
distance = "dtw_basic", centroid = "pam",
seed = 3247L, trace = TRUE)
sapply(pc_dtw, function(cl) { sum(cl@cldist ^ 2) })
plot(pc_dtw)
sapply(pc_dtw, function(cl) { sum(cl@cldist ^ 2) })
sapply(SURFSKINTEMP_CLUST, cvi, type = c("DB", "DBstar"))
sapply(pc_dtw, cvi, type = c("DB", "DBstar"))
sapply(pc_dtw, cvi, type = c("DB", "DBstar"))
sapply(pc_dtw, function(cl) { sum(cl@cldist ^ 2) })
wss = sapply(pc_dtw, function(cl) { sum(cl@cldist ^ 2) })
n_clust
wss
n_clust = 5:10
wss = sapply(pc_dtw, function(cl) { sum(cl@cldist ^ 2) })
elbow_df <- as.data.frame(cbind("n_clust" = n_clust, "wss" = wss))
ggplot(elbow_df) +
geom_line(aes(y = wss, x = n_clust), colour = "#82518c")
########### ----------- Other ------- ########
pc_dtw <- tsclust(other, type = "partitional", k = 1L:10L,
distance = "dtw_basic", centroid = "pam",
seed = 3247L, trace = TRUE)
########### ----------- Other ------- ########
pc_dtw <- tsclust(other, type = "partitional", k = 2L:10L,
distance = "dtw_basic", centroid = "pam",
seed = 3247L, trace = TRUE)
n_clust = 5:10
n_clust = 2:10
wss = sapply(pc_dtw, function(cl) { sum(cl@cldist ^ 2) })
elbow_df <- as.data.frame(cbind("n_clust" = n_clust, "wss" = wss))
ggplot(elbow_df) +
geom_line(aes(y = wss, x = n_clust), colour = "#82518c")
########### ----------- Other ------- ########
pc_dtw <- tsclust(other, type = "partitional", k = 2L:5L,
distance = "dtw_basic", centroid = "pam",
seed = 3247L, trace = TRUE)
n_clust = 2:10
wss = sapply(pc_dtw, function(cl) { sum(cl@cldist ^ 2) })
elbow_df <- as.data.frame(cbind("n_clust" = n_clust, "wss" = wss))
ggplot(elbow_df) +
geom_line(aes(y = wss, x = n_clust), colour = "#82518c")
########### ----------- Other ------- ########
pc_dtw <- tsclust(other, type = "partitional", k = 2L:5L,
distance = "dtw_basic", centroid = "pam",
seed = 3247L, trace = TRUE)
n_clust = 2:5
wss = sapply(pc_dtw, function(cl) { sum(cl@cldist ^ 2) })
elbow_df <- as.data.frame(cbind("n_clust" = n_clust, "wss" = wss))
ggplot(elbow_df) +
geom_line(aes(y = wss, x = n_clust), colour = "#82518c")
sapply(pc_dtw, cvi, type = c("DB", "DBstar"))
sapply(pc_dtw, cvi, type = c("DB", "Sil"))
sapply(pc_dtw, cvi, type = c(Sil"))
plot(pc_dtw)
pc_ecludean <- tsclust(other, type = "partitional", k = 5,
distance = "Euclidean", centroid = "pam",
seed = 3247L, trace = TRUE)
plot(pc_ecludean)
hc <- tsclust(other, type = "hierarchical", k = 5L,
distance = "sbd", trace = TRUE,
control = hierarchical_control(method = "average"))
plot(hc)
sapply(pc_dtw, cvi, type = c("Sil"))
########### ----------- Other ------- ########
pc_dtw <- tsclust(other, type = "partitional", k = 2L:10L,
distance = "dtw_basic", centroid = "pam",
seed = 3247L, trace = TRUE)
sapply(pc_dtw, cvi, type = c("Sil"))
########### ----------- Other ------- ########
pc_dtw <- tsclust(other, type = "partitional", k = 2:10,
distance = "dtw_basic", centroid = "pam",
seed = 3247L, trace = TRUE)
n_clust = 2:5
sapply(pc_dtw, cvi, type = c("Sil"))
########### ----------- Other ------- ########
pc_dtw <- tsclust(other, type = "partitional", k = 2:10,
distance = "Euclidean", centroid = "pam",
seed = 3247L, trace = TRUE)
n_clust = 2:5
wss = sapply(pc_dtw, function(cl) { sum(cl@cldist ^ 2) })
sapply(pc_dtw, cvi, type = c("Sil"))
########### ----------- Other ------- ########
pc_dtw <- tsclust(other, type = "partitional", k = 2:10,
distance = "dtw_basic",
seed = 3247L, trace = TRUE)
n_clust = 2:5
sapply(pc_dtw, cvi, type = c("Sil"))
hc <- tsclust(other, type = "hierarchical", k = 5L,
distance = "sbd", trace = TRUE,
control = hierarchical_control(method = "average"))
plot(hc)
hc <- tsclust(other, type = "hierarchical", k = 5:10L,
distance = "sbd", trace = TRUE,
control = hierarchical_control(method = "average"))
sapply(hc, cvi, type = c("Sil"))
plot(hc)
hc
hc[1]
hc[[1]]
plot(hc[[1]])
sapply(hc, cvi, type = c("Sil"))
hc <- tsclust(other, type = "hierarchical", k = 2:10L,
distance = "sbd", trace = TRUE,
control = hierarchical_control(method = "average"))
sapply(hc, cvi, type = c("Sil"))
plot(hc[[3]])
plot(hc[[3]])
plot(hc[[2]])
plot(hc[[1]])
dev.off()
plot(hc[[1]])
dev.off()
hc
hc[[1]]
plot(hc[[1]])
strsplit('VSC,1RK,1LZ.UHV,477,1DT,1AM,YCC,1AJ,PAE,1JY,BHM,1CT,1MC,AVD,1QX,1Q0')
strsplit('VSC,1RK,1LZ.UHV,477,1DT,1AM,YCC,1AJ,PAE,1JY,BHM,1CT,1MC,AVD,1QX,1Q0',','
strsplit('VSC,1RK,1LZ.UHV,477,1DT,1AM,YCC,1AJ,PAE,1JY,BHM,1CT,1MC,AVD,1QX,1Q0',',')
strsplit('VSC,1RK,1LZ.UHV,477,1DT,1AM,YCC,1AJ,PAE,1JY,BHM,1CT,1MC,AVD,1QX,1Q0',',')
strsplit('VSC,1RK,1LZ.UHV,477,1DT,1AM,YCC,1AJ,PAE,1JY,BHM,1CT,1MC,AVD,1QX,1Q0',',')[[1]]
len(strsplit('VSC,1RK,1LZ.UHV,477,1DT,1AM,YCC,1AJ,PAE,1JY,BHM,1CT,1MC,AVD,1QX,1Q0',',')[[1]])
length(strsplit('VSC,1RK,1LZ.UHV,477,1DT,1AM,YCC,1AJ,PAE,1JY,BHM,1CT,1MC,AVD,1QX,1Q0',',')[[1]])
length(strsplit('',',')[[1]])
length(strsplit('CMD,1DM,ZCG,ZXK,1NX,VSC,AFK,ZDX,AZH,1PI,1PK,AFQ,BAH,S62,1RT,1RX,1LA,ASF,RPL,ZDE,1QD,1MX,VGV,1FL,',',')[[1]])
length(strsplit('BCR,ASD,ANK,1LJ,1HY,10X,1MU,ZRK,VBW,1J6,ATU,AUT,1NB,1HQ,1BS,1JO,TUB,1ND,XUZ,1CZ,1PH,1NQ,1MG,REB,APZ,BIH,16S,1ET,1IF',',')[[1]])
10Z,1NM,YCM,1EA,ZXP,1GP
length(strsplit('10Z,1NM,YCM,1EA,ZXP,1GP',',')[[1]])
length(strsplit('THU,YRK,1BE,XQO,500,BEZ,YSR,1QA,10F',',')[[1]])
length(strsplit('CMD,1DM,ZCG,ZXK,1NX,VSC,AFK,ZDX,AZH,1PI,1PK,AFQ,BAH,S62,1RT,1RX,1LA,ASF,RPL,ZDE,1QD,1MX,VGV,1FL',',')[[1]])
length(strsplit('BHG,AAC,1BB,AVN,BEO,VHA,10N,1EZ,ZHW,1PY,1QY,1NS,ZRE,1QG,1QU,ZQZ,1MO,1NM',',')[[1]])
length(strsplit('',',')[[1]])
length(strsplit('1NP,XKT,1KX,ZLX,1PC,1LB,1EZ,1EM,1IL,1KE,AJT,1LX,UXF,ZBD,YMY,ZWE,YVV,1LI,XMB,WXD,YZC,1PE,1ID,AVU,1FF,1NC,ZTC,10H,BAB',',')[[1]])
length(strsplit('AZH,TML,XDB,1MV,BAB,1AI,1KZ,1PY,AXQ',',')[[1]])
length(strsplit('1LP,1QR,ANT,1QV,886,1HD,1KX,ZSP,ZVK,VES,YZG,1IH,1NH,YME,ARD,AKX,URY,TKD,VEE,BJX,1HU,SHD,1RV',',')[[1]])
length(strsplit('1QW,1PR,1QK,BCQ,ZMD,AJN,ANM,XDB,1FT,1QP,1MJ,TXD,1NU,1PV,1NE,1EV,ATW,ANW,XTD,ARE,1MV,TOF,1JO,1DG,AHD,REA,ADJ',',')[[1]])
length(strsplit('1IW,BHS,M36,XSN,BEL,1PK,AFL,YAZ,1QT,1JY,1KB,1QY,204,1CE,XRV,1EC,1RQ,1QQ,1RC,AVN,XYE,1JZ,1MD',',')[[1]])
length(strsplit('YPK,1KX,1PU,AGS,BIY,1QR,1JE,VWI,1QK,1GV,YXO,1IV,1BA,1EK,ZMK,1MQ,1RJ,1KU',',')[[1]])
length(strsplit('10Q,YDB,YKJ,1AC,1RQ,1CG,1ME,IEN,WCQ,1LT,1AE,XNX,1QX,1RC,VTL,YCX,1IP,BDZ,1QP,BER',',')[[1]])
length(strsplit('AGJ,B6W,AMK,1RS,BRZ,BH1,1FR,1PU,1MI,1IW,1AF,1CJ,1KV,1LA,1QI,1NK',',')[[1]])
length(strsplit('S13,WPE,1EH,IYU,1QO,1IP,1PC,1DU',',')[[1]])
